-- Fixes to scripts via monkey patches

function get_game_version()
	local function table_of_strings_to_number(t)
		local res = {}
		for i, v in ipairs(t) do
			res[i] = tonumber(v)
		end
		if not res[2] then res[2] = 0 end
		if not res[3] then res[3] = 0 end
		return res
	end
	return GAME_VERSION and table_of_strings_to_number(str_explode(GAME_VERSION, "%.")) or {0, 0, 0}
end

-- Correct behaviour of actor_on_item_before_pickup callback
function bind_stalker_ext.actor_on_item_before_pickup(item) -- called from engine!
	-- Called when actor is pressing use key to pick up an item
	-- return false will prevent actor from pickup the item
	local flags = { ret_value = true }
	SendScriptCallback("actor_on_item_before_pickup",item,flags)
	return flags.ret_value
end

-- Fix to NPC PDA not working with active weapon when using "view" function
-- Thanks Catspaw for testing
function ui_pda_npc_tab.use_view(obj)
	local p = obj:parent()
	if not (p and p:id() == AC_ID) then
		return
	end
	
	hide_hud_inventory()
	
	if get_console_cmd(1,"g_3d_pda") then
		db.actor:make_item_active(obj)
		ActorMenu.get_pda_menu():SetActiveSubdialog("eptNPC")
	else
		db.actor:move_to_slot(obj, 14)

		if db.actor:active_slot() ~= 0 then
			db.actor:activate_slot(0)
		end

		local tg = time_global()
		CreateTimeEvent(0, "delay_2d_pda_draw", 0, function()
			if time_global() - tg > 5000 then
				-- timeout
				return true
			end
			if not db.actor:active_item() then
				ActorMenu.get_pda_menu():ShowDialog(true) 
				ActorMenu.get_pda_menu():SetActiveSubdialog("eptNPC") 
				return true
			end
		end)
	end
end

-- NLTP_ASHES: Fix for ActorMenu_on_item_after_move callback sending nil values
do
	local ver = get_game_version()
	if ver[2] <= 5 and ver[3] <= 2 then
		ui_inventory_UIInventory_Action_Move = ui_inventory.UIInventory.Action_Move
		function ui_inventory.UIInventory:Action_Move(obj, bag)
		  obj = self:CheckItem(obj,"Action_Move")
		  if obj then
		    ui_inventory_UIInventory_Action_Move(self, obj, bag)
		  end
		end
	end
end

-- item_device and itms_manager faulty callbacks with flags
item_device_on_anomaly_touch = item_device.on_anomaly_touch
item_device.on_anomaly_touch = function(obj, flags)
	if flags.ret_value then
		item_device_on_anomaly_touch(obj, flags)
	end
end

itms_manager_actor_on_item_before_use = itms_manager.actor_on_item_before_use
itms_manager.actor_on_item_before_use = function(obj, flags)
	if flags.ret_value then
		itms_manager_actor_on_item_before_use(obj, flags)
	end
end

-- xrs_facer faulty hit_callback
function xrs_facer.hit_callback(obj, amount, dir, who, bone_index)
	if not xrs_facer.Enabled then return end
	if bone_index == "from_death_callback" then return end
	if not db.storage[obj:id()].facer then return end

	if who and (IsStalker(who) or IsMonster(who)) and who:alive() and xrs_facer.check_enemy(who, obj) then
		local target_id = load_var(obj, "facer_target", nil)
		local target = target_id and db.storage[target_id] and db.storage[target_id].object
		if
			not target
			or obj:relation(target) ~= game_object.enemy
			or target:position():distance_to_sqr(obj:position()) > 4
		then
			save_var(obj, "facer_target", who:id())
			db.storage[obj:id()].facer.check_time = time_global() + xrs_facer.facer_sets.check_prd
		end
	end
end
